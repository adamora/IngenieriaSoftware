/*
 * main.cpp
 *
 *  Created on: 20 de ago. de 2015
 *      Author: adam
 */

#include "Agenda.h"
#include "SGDB.h"
#include "SGDBFichero.h"
#include "UI.h"

#include <iostream>
#include <stdlib.h>
#include <stdio.h>
#include <cctype>

using namespace std;
using namespace Dentista;


void presioneParaContinuar()
{
	char tecla;

	cout << "Presione --intro-- para continuar";
	while(tecla != '\n'){
		cin.ignore();
		tecla=cin.get();
	}
}

int menu()
{
	int opcion;

	do{
		system("clear");
		cout << ">>>>>>>MENÚ PRINCIPAL<<<<<<<\n";
		cout << "1. Ver Agenda Completa\n";
		cout << "2. Insertar Paciente\n";
		cout << "3. Buscar Paciente\n";
		cout << "4. Eliminar Paciente\n";
		cout << "5. Modificar Paciente\n";
		cout << "6. Ver Favoritos y Mas Frecuentes\n";
		cout << "7. Agregar Favorito\n";
		cout << "8. Guardar en Fichero\n";
		cout << "9. Cargar Fichero\n";
		cout << "0. Salir\n";
		cout << "Opción: ";
		cin >> opcion;

		if(opcion<0 || opcion>9)
		{
			cout << "ERROR: ¡La opción escogida es incorrecta!\n";
			presioneParaContinuar();
		}
	}while(opcion<0 || opcion>9);

	return opcion;
}

int main(void)
{
	Agenda agenda;

	int opcion;
	char tecla;
	string dni;

	string nomFich;

	do{
		tecla='.';

		opcion=menu();

		switch(opcion)
		{
			case 1:
				system("clear");

				visualizarAgenda(agenda);

				presioneParaContinuar();
				break;

			case 2:
				system("clear");
				cout << ">>>>>>>AGREGAR NUEVO PACIENTE<<<<<<<\n";
				introducirDatosContacto(agenda);

				presioneParaContinuar();
				break;

			case 3:
				system("clear");

				cout << ">>>>>>>BUSQUEDA DE PACIENTES<<<<<<<\n";
				cout << "Introduzca DNI: ";
				cin >> dni;

				if(agenda.buscarPaciente(dni)==true)
					visualizarContacto(agenda.visualizarPaciente(dni));
				else
					cout << "No existe el contacto\n";

				presioneParaContinuar();
				break;

			case 4:
				system("clear");
				cout << ">>>>>>>ELIMINAR PACIENTE<<<<<<<\n";
				cout << "Introduzca DNI del contacto que desee eliminar: ";
				cin >> dni;

				eliminarContacto(dni,agenda);

				presioneParaContinuar();
				break;

			case 5:
				system("clear");
				cout << ">>>>>>>MODIFICAR PACIENTE<<<<<<<\n";
				cout << "Introduzca DNI del contacto que desee modificar: ";
				cin >> dni;

				if(agenda.buscarPaciente(dni)==true)
				{
					cout << "El contacto se llama: " << agenda.visualizarPaciente(dni).getNombre() << "\n";
					cout << "Desea modifica el contacto? (S/N): ";
					while(tecla != 'S' && tecla != 'N'){
						cin >> tecla;
					}
					if(tecla=='S')
					{
						modificarContacto(agenda.visualizarPaciente(dni));
					}
					else
					{
						cout << "Operación cancelada\n";
					}
				}
				else
					cout << "No existe el contacto\n";

				presioneParaContinuar();
				break;

			case 6:
				system("clear");
				cout << ">>>>>>>VER FAVORITOS<<<<<<<\n";
				agenda.verFavoritos();

				cout << ">>>>>>>TOP 5 EN FRECUENTES<<<<<<<\n";
				agenda.verMasUsados();

				presioneParaContinuar();
				break;

			case 7:
				system("clear");
				cout << ">>>>>>>AGREGAR FAVORITO<<<<<<<\n";
				cout << "Introduzca DNI del contacto que desee modificar: ";
				cin >> dni;

				if(agenda.buscarPaciente(dni)==true)
				{
					agregarFavorito(agenda,agenda.visualizarPaciente(dni));
				}
				else
					cout << "No existe el contacto\n";

				presioneParaContinuar();
				break;

			case 8:
			{
				system("clear");
				cout << ">>>>>>>GENERAR FICHERO<<<<<<<\n";


				cout << "Introduzca el nombre del fichero: ";
				cin >> nomFich;

				SGDBFichero nuevo(nomFich);
				nuevo.guardar(agenda);

				cout << "Operación realizada exitosamente\n";

				presioneParaContinuar();
				break;
			}
			case 9:
			{
				system("clear");
				cout << ">>>>>>>CARGAR FICHERO<<<<<<<\n";

				cout << "Introduzca el nombre del fichero: ";
				cin >> nomFich;

				SGDBFichero nuevo(nomFich);

				Agenda aux;
				aux.borrarAgenda();
				aux=agenda;
				nuevo.cargar(aux);

				cout << "El contenido del fichero es el siguiente:\n";
				visualizarAgenda(aux);

				//
				cout << "Desea cargarlo a la agenda? (S/N): ";
				while(tecla != 'S' && tecla != 'N'){
					cin >> tecla;
				}
				if(tecla=='S')
				{
					cout << "AQUI ENTRA\n";
					//BORRAR AGENDA
					agenda.borrarAgenda();
					cout << "AQUI ENTRA\n";

					agenda=aux;
					cout << "Operación realizada exitosamente\n";
				}
				else
				{
					aux.borrarAgenda();
					cout << "Operación cancelada\n";
				}

				//
				presioneParaContinuar();
				break;
			}
			case 0:
				system("clear");
				cout << "Saliendo del programa...\n";
				exit(0);

			default:
				system("clear");
				cout << "Opcion incorrecta\n";
				presioneParaContinuar();
				break;
		}

	}while(opcion!=0);

	return 0;
}

